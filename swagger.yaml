openapi : 3.0.0

info:
  title: Lerning writing Documentation
  description : In this app, we are going to learn and write our own docs
  version: 1.1.0
  contact:
    email: agarwalsarthak456@gmail.com
    url: "https://sarthakag.netlify.com"

servers:
  - url : "{protocol}://localhost:4000/api/{version}"
    description : This server is for localhost
    variables: 
      version: 
        enum:
          - v1
          - v2
        default: v1
      protocol: 
        enum:
          - http
          - https
        default: http

components:
  securitySchemes:
    cookieAuth:      
      type: apiKey
      in: cookie
      name: token
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer 
          


paths:
  /gc:
    get:
      tags: 
        - String
      description : This path return a greeting from groupy Coverage
      responses:
        200 :
          description: Successsfully greeted you!
          content:
            application/json:
              schema:
                type: string
                example: "myString"
        400:
          description: Bad Request, Please try again
        500:
          description: Please try again later, server is down



  /getCourses:
    get:
      tags: 
        - String
      description : This path return a greeting from groupy Coverage
      responses:
        200 :
          description: Successsfully greeted you!
          content:
            application/json:
              schema:
                type: object
                properties: 
                  id:
                    type: string
                  name: 
                    type: string
                  price:
                    type: string
        400:
          description: Bad Request, Please try again
        500:
          description: Please try again later, server is down

  /getAllCourses:
    get:
      tags: 
        - String
      description : This path return a greeting from groupy Coverage
      responses:
        200 :
          description: Successsfully greeted you!
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object 
                  properties: 
                    id:
                      type: string
                    name: 
                      type: string
                    price:
                      type: string
        400:
          description: Bad Request, Please try again
        500:
          description: Please try again later, server is down

  /getACourse/{courseId}:
    get:
      tags: 
        - String
      summary: get a singel course
      parameters:
        - name: courseId
          in:  path
          required: true
          default: 123
          schema:
          type: string 
      responses:
        200:
          description: Ok
        400:
          description: Bad Request, Please try again
        500:
          description: Please try again later, server is down

  /addACourse:
    post:
      tags:
        - Add Course
      summary: adds a new course to courses
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id: 
                  type: number
                name:
                  type: string
                price:
                  type: number
      responses: 
        200:
          description: All good
            content:
              application/json:
                schema:
                  type: boolean
        
        400:
          description: Bad Request
  
  /queryCheckingParamters:
    get:
      tags:
        - Add Course
      summary: adds a new course to courses

      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum: [delhi, london, jaipur]
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum: [web, mobile, desktop]


      responses: 
        200:
          description: All good
        
        400:
          description: Bad Request

